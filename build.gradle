apply plugin: 'java'
// apply plugin: 'idea'

def swingMainClass = 'qwirkle.ui.swing.main.SwingMain'
def testAllClass = 'qwirkle.test.TestMain'
def testQuickClass = 'qwirkle.test.TestMainBrief'

sourceSets {
  swing {
    // compileClasspath += main.output
    // runtimeClasspath += main.output
  }
  test { // automatically includes main
    compileClasspath += sourceSets.swing.output
  }
  main { // not necessary -- would be included anyway
    runtimeClasspath += sourceSets.swing.output
  }
}

repositories {
  mavenCentral()
}

dependencies {
  compile group: 'com.google.guava', name: 'guava', version: '19.0'
  swingCompile sourceSets.main.output, 'com.google.guava:guava:19.0'
  //  run swingJar.output
  //  runClasspath += sourceSets.swing.output
  // application sourceSets.swing.output
}

task swingJar(type: Jar) {
  from sourceSets.swing.output, sourceSets.main.output
  baseName = 'qwirkle_swing'
  manifest {
	attributes 'Main-Class': swingMainClass
  }
}

task runSwing(type: JavaExec) {
  classpath = sourceSets.swing.runtimeClasspath
  main = swingMainClass
}

task runAllTests(type: JavaExec) {
  classpath = sourceSets.test.runtimeClasspath
  main = testAllClass
  jvmArgs '-ea'
}

task runQuickTests(type: JavaExec) {
  classpath = sourceSets.test.runtimeClasspath
  main = testQuickClass
  jvmArgs '-ea'
}

task run(dependsOn: runSwing)
task quick(dependsOn: runQuickTests)
task all(dependsOn: runAllTests)